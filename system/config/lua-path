#!/usr/bin/env bash

set -Eeuo pipefail

source "${CODE_ROOT}/lib/bash/utils.sh"


USAGE="usage: lua-path {-d} [-p] [-a] [-i] [-s] [--depth] [--args]"

usage() {
    echo "${USAGE}"
}

help() {
cat <<help
DESCRIPTION

    Discover, display, and write to stdout in format expected for "LUA_PATH" lua code sources found in search directories provided via -d. By default, this script considers any
    directory named "lua" as containing lua source.

USAGE

    ${USAGE}

OPTIONS

    -d, --dir           optional if -i|--inspect is used; multi-valued; directories in which to search for lua sources
    -p, --pattern       optional, defaults to "lua"; the pattern that identifies lua sources; can be a directory name or partial path
    -a, --append        optional; if present prints new paths appended to existing value of LUA_PATH
    -i, --inspect       optional; if present, prints lua-path to stdout in human readable format
    -s, --strict        optional; if present, the script will fail if any single provided search dir is invalid (i.e.: doesn't exist)
    --depth             optional, defaults to 4; directory search depth; note: can be overwritten by args (i.e.: -maxdepth n)
    --args              optional; args passed to the find command that searches for lua sources; overrides built-in find filter args
    -v, --verbose       optional; if present, the script will print to stdout the paths of discovered lua sources
    -h, --help          display this message
help
}


DIRS=()
VALID_DIRS=()
PATTERN="lua"
APPEND=""
INSPECT=""
STRICT=""
DEPTH="-maxdepth 4"
ARGS="-type d"
VERBOSE=""

while [[ $# -gt 0 ]]; do
  case $1 in
    -d|--dir)
      DIRS+=("${2}")
      shift
      shift
      ;;
    -p|--pattern)
      PATTERN="${2}"
      shift
      shift
      ;;
    -a|--append)
      APPEND="true"
      shift
      ;;
    -i|--inspect)
      INSPECT="true"
      shift
      ;;
    -s|--strict)
      STRICT="true"
      shift
      ;;
    --depth)
      DEPTH="-maxdepth ${2}"
      shift
      shift
      ;;
    --args)
      ARGS="${2}"
      shift
      shift
      ;;
    -v|--verbose)
      VERBOSE="true"
      shift
      ;;
    -h|--help)
      help
      exit 0
      ;;
    *)
      usage
      exit 1
      ;;
  esac
done


for dir in "${DIRS[@]}"; do
    if [[ -d "${dir}" ]]; then
        VALID_DIRS+=("${dir}")
    else
        echo "Warning: ${dir} is not a valid directory"
        [[ "${STRICT}" = "true" ]] && exit 1
    fi
done

if [[ "${#VALID_DIRS[@]}" -eq "0" ]] && [[ -z "${INSPECT}" ]]; then
    echo "At least one (1) valid search directory (-d|--dir) is required"
    exit 1
elif [[ "${#VALID_DIRS[@]}" -eq "0" ]] && [[ "${INSPECT}" == "true" ]]; then
    [[ -n "${LUA_PATH+x}" ]] && echo "${LUA_PATH}" | tr ';' '\n' || echo "LUA_PATH is unset"
    exit 0
fi

if [[ "${APPEND}" == "true" ]] && [[ -n "${LUA_PATH+x}" ]]; then
    ( IFS=';'
      for PATH in ${LUA_PATH}; do
          if [[ "${INSPECT}" == "true" ]]; then
              echo "${PATH}"
          else
              echo -n ";${PATH}"
          fi
      done
    )
fi

find "${VALID_DIRS[@]}" ${ARGS} ${DEPTH} -path "*/${PATTERN}" -print0 |
    while IFS= read -r -d '' path; do
        LUA_FILE_PATH="${path}/?.lua"
        LUA_INIT_PATH="${path}/?/init.lua"

        if [[ "${INSPECT}" == "true" ]]; then
            echo "${LUA_FILE_PATH}"
            echo "${LUA_INIT_PATH}"
        else
            echo -n ";${LUA_FILE_PATH}"
            echo -n ";${LUA_INIT_PATH}"
        fi
done

