#!/usr/bin/env bash

set -Eeuo pipefail


USAGE="log-explore [-v [type]] [-l] [-t]"

usage() {
    echo "${USAGE}"
}

help() {
cat <<help
DESCRIPTION

    Utility for viewing/opening log files/directories. Uses include:

        * no arguments - opening the root log directory in an editor
        * single positional "type" argument - opening in an editor the log file/directory for a specific type
        * -l|--list flag - listing known log files/directories (see note on "pagers" below)
        * -t|--tree flag - displaying as a tree known log files/directories (see note on "pagers" below)

    The commands, i.e. "pagers", used to process the -l|--list and -t|--tree flags can be configured via the following mechanisms:

        * list pager (-l|--list)
          * default: "ls"
          * toml config: pager.list
          * env var: ULOGGER_LIST_PAGER
        * tree pager (-t|--tree)
          * default: "ls -R"
          * toml config: pager.tree
          * env var: ULOGGER_TREE_PAGER

    Note: the editor used is configured via the standard "EDITOR" env var.


USAGE

    ${USAGE}

POSITIONAL ARGUMENTS

    TYPE                optional; the type of log file/dir to open in an editor

OPTIONS

    -l, --list          optional; if specified, prints to stdout a flat list of existing log files
    -t, --tree          optional; if specified, prints to stdout a tree of existing log files
    -h, --help          optional; display this message
help
}


TYPE=""

function __open_in_editor() {
    local field="${1}"
    local type="${2:-}"

    local -r log_path="$(log-config -f "${field}" -t "${type}")"
    "${EDITOR}" "${log_path}"
}

function __view() {
    local view_op="${1}"

    local -r log_root="$(log-config -f root)"
    local -r view_cmd="$(log-config -f "pager.${view_op}")"

    $view_cmd "${log_root}" && return 0 || return 1
}

while [[ $# -gt 0 ]]; do
  case $1 in
    -l|--list) __view "list" && exit 0 || exit 1 ;;
    -t|--tree) __view "tree" && exit 0 || exit 1 ;;
    -h|--help) help && exit 0 ;;
    *) TYPE="${1}" ; shift ;;
  esac
done

if [[ -n "${TYPE}" ]]; then
    __open_in_editor "path" "${TYPE}"
else
    __open_in_editor "root"
fi

