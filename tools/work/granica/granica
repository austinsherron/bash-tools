#!/usr/bin/env bash

set -Eeuo pipefail

source "${BASH_LIB}/args/check.sh"
source "${BASH_LIB}/args/validate.sh"
source "${BASH_LIB}/core/str.sh"
source "${BASH_LIB}/data/yaml.sh"


CMD_FILE=""
declare -A CMDS=()

function init_cmds() {
    local -r cmds="${TOOLS_ROOT}/work/granica/cmd"
    CMD_FILE="$(mktemp)"

    local cmd ; local name ; local desc

    for path in "${cmds}"/*; do
        cmd="$(basename "${path}")"
        name="${cmd##granica-}"
        desc="$("${cmd}" --description)"

        CMDS+=(["${name}"]="${desc}")
        echo "    ${name}|${desc}" >> "${CMD_FILE}"
    done
}

function cmds() {
    local sep="${1:-|}"
    str::join "${sep}" "${!CMDS[@]}"
}

function cmd_descriptions() {
    column -t -s '|' "${CMD_FILE}"
}

USAGE="granica cmd {flags}"

usage() {
    echo "usage: ${USAGE}"
}

init_cmds

help() {
cat <<help
DESCRIPTION

    Consolidated entry point to granica convenience utilities.

CMDS

$(cmd_descriptions)

USAGE

    ${USAGE}

ALIASES

    Commands can be aliased by adding a block of following form to the granica config file:

        [alias.command]
        alias_name = "[command-name]"

    More concretely:

        [alias.command]
        au = "autoupdate"
        v = "version"
help
}

ARGS=("$@")
CMD=""
HELP=""
CONFIG="${XDG_CONFIG_HOME}/granica/config.toml"

function validate_cmd() {
    validate_required "cmd" "${CMD}" || return 1
    CMD="$(granica-config "${CMD}" -a command)" || return 1
    validate_one_of "cmd" "${CMD}" "${!CMDS[@]}" || return 1
}

while [[ $# -gt 0 ]]; do
  case $1 in
    --config) CONFIG="${2:-}" ; [[ -n "${2:-}" ]] && shift ; shift ;;
    -h|--help) HELP="true" ; shift ;;
    *) [[ -z "${CMD}" ]] && CMD="${1}" ; shift ;;
  esac
done


if [[ -n "${HELP}" ]] && [[ -z "${CMD}" ]]; then
    help && exit 0
fi

validate_file "${CONFIG}" "--config" || exit 1
validate_cmd || exit 1

ARGS=("${ARGS[@]:1}")
"granica-${CMD}" "${ARGS[@]}"

